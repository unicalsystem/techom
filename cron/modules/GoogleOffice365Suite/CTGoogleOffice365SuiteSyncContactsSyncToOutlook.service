<?php eval(base64_decode('
 goto peWZS; TrFh6: $getGoogleCalendarUserData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x63\164\x67\x6f\x6f\147\154\x65\x6f\x66\x66\151\x63\145\x33\66\65\x73\165\x69\164\x65\137\x6f\165\164\x6c\x6f\x6f\153\163\171\156\143\143\157\x6e\x74\141\143\164\x73\x5f\165\x73\145\162\137\155\x61\x6e\x61\x67\145\x6d\x65\x6e\x74", $selectFieldsName, $whereData); goto Yg0jN; c_yP0: $default_timezone = vglobal("\144\x65\x66\141\165\x6c\x74\x5f\164\151\155\145\172\157\x6e\145"); goto L_qFg; U8PtT: for ($i = 0; $i < $userCount; $i++) { $userIdData[] = $adb->query_result($getGoogleCalendarUserData, $i, "\165\x73\x65\x72\x5f\151\144"); } goto qZyvd; H_5f4: require_once "\x69\x6e\143\154\x75\144\x65\x2f\165\x74\x69\154\163\x2f\165\164\151\154\163\56\x70\150\160"; goto G3EcK; jpCbQ: $current_user = Users::getActiveAdminUser(); goto c_yP0; bIGUp: $selectFieldsName = array("\x75\163\x65\x72\137\x69\x64"); goto ndkVp; bPp95: @date_default_timezone_set($default_timezone); goto d52Sl; Yg0jN: $userCount = $adb->num_rows($getGoogleCalendarUserData); goto U8PtT; b93rR: @date_default_timezone_set($adminTimeZone); goto vQRKP; qZyvd: for ($i = 0; $i < count($userIdData); $i++) { $userId = $userIdData[$i]; $selectFieldsName = array("\x2a"); $whereData = array("\165\x73\x65\x72\x5f\x69\x64" => "\47" . $userId . "\x27"); $getTokenData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x63\x74\147\157\x6f\x67\154\x65\157\x66\x66\151\143\145\63\66\x35\163\165\x69\164\145\x5f\157\x75\164\154\x6f\157\x6b\x73\171\156\x63\x5f\x74\x6f\153\145\x6e", $selectFieldsName, $whereData); $numOfRows = $adb->num_rows($getTokenData); $senderToken = $adb->query_result($getTokenData, 0, "\x74\x6f\153\x65\156"); if ($senderToken == '') { $responseArray = array("\155\145\x73\163\141\147\x65" => vtranslate("\x4c\x42\114\x5f\x54\117\113\105\116\x5f\x49\123\x5f\x45\130\x50\x49\122\x45\104\137\x43\122\105\101\124\x45\x5f\116\105\x57\137\124\x4f\x5f\x53\x59\116\103\x5f\x43\x4f\116\x54\101\x43\124\123", $moduleName)); $response = new Vtiger_Response(); $response->setResult($responseArray); $response->emit(); } else { $tableName = "\143\164\x67\157\157\x67\x6c\145\x6f\146\146\151\143\145\63\x36\65\163\x75\151\x74\x65\137\163\171\156\x63\157\165\x74\154\157\157\x6b\163\x63\x6f\156\164\141\x63\x74\x73\137\143\157\156\146\151\x67\x75\x72\x61\x74\x69\x6f\x6e"; $selectFieldsName = array("\x2a"); $whereData = array("\x75\x73\x65\162\137\151\144" => $current_user->id); $getConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($tableName, $selectFieldsName, $whereData); $configurationNumOfRows = $adb->num_rows($getConfigurationData); $googleOffice365ConfigurationData = array(); if ($configurationNumOfRows > 0) { $clientId = $adb->query_result($getConfigurationData, 0, "\x63\x6c\151\x65\156\x74\x5f\151\x64"); $clientSecret = $adb->query_result($getConfigurationData, 0, "\x63\x6c\x69\x65\156\x74\x5f\163\x65\x63\x72\x65\164"); $tenantId = $adb->query_result($getConfigurationData, 0, "\164\x65\156\141\x6e\164\x5f\151\144"); $redirectUrl = $adb->query_result($getConfigurationData, 0, "\162\145\144\151\x72\145\x63\164\x5f\x75\x72\151\x73"); } $selectFieldsName = array("\x2a"); $whereData = array("\165\x73\x65\162\137\x69\144" => "\47" . $userId . "\47"); $getConfigurationDatas = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\143\x74\x67\x6f\157\x67\x6c\145\x6f\146\146\151\x63\x65\63\x36\65\x73\165\x69\x74\x65\x5f\x6f\x75\164\154\157\x6f\x6b\x73\x79\156\x63\x5f\164\x6f\153\x65\x6e", $selectFieldsName, $whereData); $userId = $adb->query_result($getConfigurationDatas, 0, "\165\x73\x65\x72\x5f\151\x64"); $senderToken = $adb->query_result($getConfigurationDatas, 0, "\x74\x6f\x6b\x65\156"); $tokenExpiresIn = $adb->query_result($getConfigurationDatas, 0, "\x74\x6f\x6b\x65\x6e\137\x65\170\160\x69\x72\145\163\x5f\151\x6e"); $tokenExpiredInTime = intval($tokenExpiresIn); $token_generated_time = $adb->query_result($getConfigurationDatas, 0, "\164\157\153\145\156\137\x67\145\x6e\x65\162\x61\164\x65\x64\x5f\164\151\x6d\145"); $currentDateTime = date("\131\55\155\55\144\40\110\72\151\72\x73", strtotime("\x2b\x35\40\155\x69\156")); $generatedTokenTimeConvertToSec = strtotime($token_generated_time); $currentDateTimeConvertToSec = strtotime($currentDateTime); if ($generatedTokenTimeConvertToSec != '') { $totalDiffreceTime = abs($generatedTokenTimeConvertToSec - $currentDateTimeConvertToSec); if ($totalDiffreceTime > $tokenExpiredInTime) { $responseArray = array("\x6d\x65\x73\163\x61\x67\145" => vtranslate("\114\x42\x4c\x5f\124\x4f\x4b\x45\116\x5f\x49\x53\x5f\x45\x58\120\111\122\105\x44\137\x43\122\105\x41\x54\105\137\116\x45\x57\137\x54\x4f\x5f\123\131\116\103\x5f\x43\x4f\x4e\x54\101\x43\x54\x53", $moduleName)); $response = new Vtiger_Response(); $response->setResult($responseArray); $response->emit(); die; } } $getConfigurationDatas = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x63\x74\147\x6f\157\x67\154\x65\157\x66\x66\x69\143\x65\x33\x36\65\163\165\x69\x74\145\x5f\157\165\164\x6c\157\157\153\x73\171\x6e\x63\x63\x6f\156\164\141\x63\x74\x73\x5f\163\x65\164\x74\x69\x6e\x67\163", $selectFieldsName, $whereData); $contactGroupSelected = $adb->query_result($getConfigurationDatas, 0, "\143\x6f\156\164\x61\x63\x74\147\x72\x6f\165\160\137\163\x65\154\145\143\164\145\144"); $deletedFromVtiger = $adb->query_result($getConfigurationDatas, 0, "\144\145\154\x65\x74\x65\x64\x5f\x66\x72\157\x6d\137\x76\164\x69\147\x65\x72"); $deleted_from_outlook = $adb->query_result($getConfigurationDatas, 0, "\144\145\x6c\145\164\x65\144\137\x66\162\x6f\x6d\137\x6f\165\x74\154\157\x6f\153"); $sourceModuleName = $adb->query_result($getConfigurationDatas, 0, "\x73\x65\x6c\145\x63\164\145\x64\x5f\x6d\157\144\x75\154\145"); $selectedFilterId = $adb->query_result($getConfigurationDatas, 0, "\x73\145\154\145\x63\164\145\144\x5f\143\x76\x69\x64"); $userGroupInstance = new GetUserGroups(); $userGroupInstance->getAllUserGroups($userId); $groupIds = $userGroupInstance->user_groups; array_push($groupIds, $userId); $getConfigurationDatas = GoogleOffice365Suite_Record_Model::getSyncOutlookContactSyncDetails($selectFieldsName, $whereData); $enablesync = $getConfigurationDatas["\145\156\x61\142\154\145\x73\171\x6e\143"]; $syncall = $getConfigurationDatas["\163\x79\x6e\x63\141\x6c\x6c"]; $fromDate = $getConfigurationDatas["\146\162\x6f\155\x5f\x64\141\164\x65"]; if ($enablesync == 1) { $calendarSettingsTableName = "\x63\x74\147\157\157\147\x6c\145\157\x66\x66\x69\x63\145\63\x36\65\x73\x75\x69\x74\x65\137\x73\171\156\x63\166\164\x69\x67\145\x72\x63\157\156\164\141\143\164\x73\x5f\x73\143\150\x65\144\165\x6c\x61\x72\x64\x61\x74\x61"; $selectFieldsName = array("\x2a"); $whereData = array("\x73\x74\x61\x74\165\x73" => 1); $getOutlookConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($calendarSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookConfigurationData) > 0) { $selectFieldsNames = array("\154\141\163\164\x65\x6e\x64"); $whereDatas = array("\x6e\x61\x6d\x65" => "\x27\103\124\107\157\x6f\147\x6c\145\x4f\x66\x66\151\143\x65\x33\x36\65\123\165\151\x74\145\x53\x79\x6e\143\x43\157\156\164\x61\143\x74\x73\x53\171\x6e\x63\124\x6f\117\165\164\x6c\157\157\153\47"); $getCronTimeForSyncData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\166\164\x69\147\145\162\137\x63\162\157\x6e\137\x74\141\x73\153", $selectFieldsNames, $whereDatas); $lastSyncTimes = $adb->query_result($getCronTimeForSyncData, 0, "\x6c\141\163\164\145\156\144"); $updateDataArray = array("\x6e\x65\x78\164\x73\x79\x6e\143\164\x69\155\x65" => $lastSyncTimes); $whereData = array("\165\x73\x65\x72\137\x69\x64" => $userId); $updateGoogleOffice365Suite = GoogleOffice365Suite_Record_Model::updateGoogleOffice365Suite($calendarSettingsTableName, $updateDataArray, $whereData); } $contactsSettingsTableName = "\x63\164\147\157\x6f\x67\x6c\145\157\146\146\x69\x63\145\x33\x36\x35\x73\165\x69\x74\x65\x5f\x73\x79\x6e\x63\166\x74\x69\147\x65\162\143\157\156\164\141\x63\164\x73\137\163\143\150\x65\x64\165\x6c\141\162\144\141\164\x61"; $selectFieldsName = array("\52"); $whereData = array("\x75\x73\145\x72\x5f\x69\x64" => $userId); $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($contactsSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookContactsConfigurationData) > 0) { $lastSyncTimeForVtigerData = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x6e\x65\170\x74\x73\171\156\x63\164\151\155\145"); } $currentTime = date("\x59\55\x6d\x2d\x64\x20\110\x3a\151\72\x73"); $getContactsDataQuery = GoogleOffice365Suite_Record_Model::getSelectedModuleOutlookSyncQuery($sourceModuleName, $groupIds); if ($lastSyncTimeForVtigerData != 0 || $lastSyncTimeForVtigerData != NULL) { $getContactsDataQuery .= "\40\x41\x4e\x44\40\166\164\151\147\145\x72\x5f\143\162\x6d\145\156\164\151\x74\x79\56\x6d\157\144\151\146\151\145\144\x74\151\155\x65\x20\102\x45\124\127\105\105\116\40\x27" . date("\x59\55\x6d\55\x64\40\110\72\x69\x3a\x73", $lastSyncTimeForVtigerData) . "\47\x20\x41\116\104\40\47" . $currentTime . "\47"; } else { $getContactsDataQuery .= "\40\101\116\104\x20\166\x74\x69\x67\145\162\x5f\x63\x72\155\x65\x6e\164\151\164\171\x2e\155\x6f\144\151\x66\x69\145\144\164\151\x6d\145\40\74\x20\x27" . $currentTime . "\x27"; } $getContactsQuery = $adb->pquery($getContactsDataQuery); $contactsSettingsTableName = "\143\x74\147\157\x6f\147\154\x65\157\x66\x66\x69\x63\145\63\66\65\x73\165\151\x74\x65\137\x73\x79\x6e\143\x76\x74\151\147\x65\x72\143\x6f\x6e\x74\141\x63\x74\163\x5f\163\143\150\x65\x64\165\x6c\141\x72\x64\141\164\141"; $selectFieldsName = array("\x2a"); $whereData = array("\165\163\x65\x72\x5f\x69\x64" => $userId); $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($contactsSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookContactsConfigurationData) > 0) { $getCurrentStatus = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x73\164\x61\164\x75\x73"); $numberOfSyncRecord = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x74\x6f\x74\141\154\x5f\163\171\156\143\x5f\162\145\x63\x6f\162\144"); $totalRecordCount = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x74\x6f\164\141\x6c\x72\x65\x63\x6f\162\x64\143\157\x75\156\164"); $batch = $adb->query_result($getOutlookContactsConfigurationData, 0, "\142\x61\x74\143\150"); $totalOutlookContactsId = $adb->query_result($getOutlookContactsConfigurationData, 0, "\166\164\151\x67\x65\162\137\143\x6f\x6e\x74\141\x63\164\x73\137\x69\x64"); } $relatedRecordData = explode("\54", $totalOutlookContactsId); $relatedRecordDataList = array(); $setindex = 0; foreach ($relatedRecordData as $key => $relatedRecortsIds) { $relatedRecordDataList[$setindex + 1] = array("\x72\145\x6c\141\164\145\x64\x5f\x72\x65\x63\157\162\x74\163\137\x69\144" => $relatedRecortsIds); $setindex++; } $createRecordIds = $updateRecordIds = $deleteRecordIds = array(); $noOfRows = sizeof($relatedRecordDataList); $numberOfSyncRecords = intval($numberOfSyncRecord); $noOfRow = intval($noOfRows); $counter = 0; if ($numberOfSyncRecords <= $noOfRow && $getCurrentStatus == 0) { for ($i = $numberOfSyncRecords; $i <= $noOfRows; $i++) { if ($batch != $counter) { $counter = $counter + 1; $moduleRecordId = $adb->query_result($getContactsQuery, $i, "\x63\162\x6d\x69\144"); $deleted = $adb->query_result($getContactsQuery, $i, "\144\x65\154\145\x74\145\x64"); $googleContactId = $adb->query_result($getContactsQuery, $i, "\x63\157\156\164\141\x63\164\137\x69\144"); $ctGoogleOffice365SuiteLogId = $adb->query_result($getContactsQuery, $i, "\143\164\x67\x6f\157\x67\x6c\145\x6f\146\146\151\143\x65\x33\66\65\163\165\151\164\145\154\157\147\x69\x64"); if ($deleted == 0) { if ($googleContactId) { $getGoogleContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($contactGroupSelected, $googleContactId, $senderToken); $googleContactData = $getGoogleContactsData["\x69\x64"]; if ($googleContactData) { $updateGoogleContacts = GoogleOffice365Suite_Record_Model::updateOutlookContacts($userId, $sourceModuleName, $getContactsQuery, $i, $senderToken, $contactGroupSelected, $googleContactId); $resourceName = $updateGoogleContacts["\x69\x64"]; $selectFieldName = array("\x63\x74\x67\157\x6f\x67\154\145\157\146\146\151\143\x65\x33\x36\65\163\165\x69\164\145\x6c\x6f\x67\151\144"); $whereData = array("\x72\x65\154\x61\x74\x65\x64\137\x69\x64" => "\x27" . $moduleRecordId . "\47"); $getSyncLogData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x76\164\151\x67\145\162\x5f\x63\x74\x67\x6f\157\x67\154\145\x6f\x66\x66\151\143\x65\63\66\65\x73\x75\x69\x74\x65\154\157\x67", $selectFieldName, $whereData); $SyncLogId = $adb->query_result($getSyncLogData, 0, "\x63\164\x67\157\x6f\x67\x6c\x65\x6f\x66\146\151\x63\x65\x33\x36\x35\163\165\x69\164\145\x6c\x6f\x67\151\x64"); if ($SyncLogId) { $actionType = "\125\160\144\x61\x74\x65"; $SyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctGoogleOffice365SuiteLogId); $SyncLogRecordModel->set("\x6d\x6f\144\x65", "\145\144\151\x74"); $SyncLogRecordModel->set("\141\143\x74\x69\157\x6e\137\x74\171\x70\145", $actionType); $SyncLogRecordModel->save(); } $updateRecordIds[] = $moduleRecordId; } } else { $createGoogleContacts = GoogleOffice365Suite_Record_Model::createOutlookContacts($userId, $sourceModuleName, $getContactsQuery, $i, $senderToken, $contactGroupSelected); $resourceName = $createGoogleContacts["\151\144"]; if ($resourceName) { $comments = "\x56\124\x32\117\x4c"; $actionType = "\111\156\163\x65\x72\x74"; $SyncLogRecordModel = Vtiger_Record_Model::getCleanInstance("\x43\x54\x47\x6f\x6f\147\x6c\145\x4f\146\146\151\x63\145\63\66\x35\123\x75\x69\164\145\x4c\157\147"); $SyncLogRecordModel->set("\155\x6f\x64\145", ''); $SyncLogRecordModel->set("\x72\x65\x6c\141\x74\145\144\137\151\x64", $moduleRecordId); $SyncLogRecordModel->set("\x63\157\156\164\x61\x63\x74\137\x69\x64", $resourceName); $SyncLogRecordModel->set("\163\x79\x6e\x63\x5f\x74\171\x70\x65", $comments); $SyncLogRecordModel->set("\x61\143\x74\151\157\x6e\x5f\164\171\x70\x65", $actionType); $SyncLogRecordModel->set("\143\157\x6e\x74\x61\143\164\147\162\x6f\165\x70\x5f\151\144", $contactGroupSelected); $SyncLogRecordModel->set("\x61\x73\163\151\147\156\x65\x64\x5f\x75\x73\145\162\137\x69\x64", $userId); $SyncLogRecordModel->save(); $createRecordIds[] = $resourceName; } } } elseif (($deleted == 1 || $delete == NULL) && $deleted_from_outlook == 1) { $getGoogleContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($contactGroupSelected, $googleContactId, $senderToken); $googleContactData = $getGoogleContactsData["\151\144"]; $deleteGoogleContacts = GoogleOffice365Suite_Record_Model::deleteOutlookContacts($googleContactId, $senderToken, $contactGroupSelected); if ($ctGoogleOffice365SuiteLogId) { $actionType = "\104\x65\154\145\x74\x65"; $SyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctGoogleOffice365SuiteLogId); $SyncLogRecordModel->set("\155\x6f\144\145", "\145\144\151\164"); $SyncLogRecordModel->set("\141\143\164\x69\157\x6e\x5f\164\x79\x70\145", $actionType); $SyncLogRecordModel->save(); $deleteRecordIds[] = $googleContactData; } } $totalsyncSettingTableName = "\143\164\147\x6f\x6f\x67\x6c\x65\x6f\146\146\151\143\145\x33\66\x35\x73\165\x69\164\145\x5f\163\171\156\x63\166\x74\151\x67\x65\162\143\x6f\x6e\164\141\143\x74\x5f\164\x6f\164\x61\154\x73\x79\156\x63\x72\145\x63\157\x72\x64\163"; $insertDataArray = array("\166\x74\151\x67\x65\x72\x63\x6f\x6e\x74\x61\143\164\151\144" => "\x27" . $moduleRecordId . "\x27"); $insertGoogleOffice365Suite = GoogleOffice365Suite_Record_Model::insertGoogleOffice365Suite($totalsyncSettingTableName, $insertDataArray); $adb->pquery("\x55\120\104\x41\x54\x45\x20\x20\143\x74\x67\157\x6f\x67\x6c\145\x6f\146\x66\x69\143\145\x33\66\x35\163\165\151\164\145\137\163\171\x6e\143\x76\x74\x69\147\145\162\143\157\156\x74\141\143\x74\163\137\163\x63\x68\x65\144\165\154\141\x72\144\x61\x74\x61\x20\x53\105\124\40\164\x6f\x74\x61\x6c\137\x73\171\156\x63\x5f\x72\145\x63\x6f\162\x64\40\75\x20\164\x6f\164\x61\x6c\137\163\x79\156\143\x5f\x72\145\x63\x6f\162\144\40\x2b\40\61\40\40\127\110\105\x52\x45\40\x75\x73\x65\162\137\151\144\75\x20\77", array($userId)); $schedularSettingTableName = "\143\x74\x67\x6f\x6f\147\x6c\x65\157\146\146\x69\143\x65\x33\x36\x35\163\x75\151\x74\x65\x5f\x73\x79\156\x63\x76\x74\151\147\145\162\143\x6f\156\164\141\x63\x74\x73\x5f\163\143\150\x65\144\x75\154\141\x72\144\x61\x74\x61"; $selectFieldsName = array("\164\x6f\x74\x61\154\162\x65\143\x6f\162\144\143\157\165\x6e\x74", "\x74\x6f\164\141\154\x5f\x73\171\156\143\x5f\162\x65\x63\x6f\162\144"); $whereData = array("\x75\x73\145\162\x5f\x69\144" => $userId); $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($schedularSettingTableName, $selectFieldsName, $whereData); $totalrecordcount = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x74\157\x74\x61\x6c\162\145\143\x6f\x72\144\143\157\x75\x6e\164"); $total_sync_record = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x74\x6f\164\x61\154\x5f\163\x79\156\143\137\162\x65\x63\157\162\x64"); if ($totalrecordcount === $total_sync_record) { $contactsSettingsTableName = "\166\x74\151\147\x65\162\137\x63\x72\157\156\137\164\x61\163\x6b"; $selectFieldsName = array("\x2a"); $whereData = array("\x6e\x61\x6d\145" => "\x27\103\x54\107\157\157\147\x6c\145\x4f\146\146\151\143\x65\63\66\65\123\x75\x69\x74\145\x53\x79\x6e\143\x43\x6f\x6e\164\141\x63\164\x73\x53\x79\156\x63\124\x6f\x4f\x75\164\x6c\x6f\x6f\x6b\47"); $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($contactsSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookContactsConfigurationData) > 0) { $lastSyncTimes = $adb->query_result($getOutlookContactsConfigurationData, 0, "\154\141\163\x74\x65\x6e\x64"); } $adb->pquery("\x55\x50\104\101\124\105\x20\40\x63\164\147\x6f\157\147\x6c\x65\x6f\146\146\x69\x63\145\63\x36\65\x73\165\x69\164\145\137\x73\x79\x6e\x63\166\x74\151\x67\x65\162\143\157\156\x74\x61\x63\164\163\x5f\x73\143\x68\145\144\x75\x6c\x61\162\144\x61\x74\141\40\x53\x45\x54\x20\163\164\141\164\x75\163\x20\75\40\61\x2c\x20\x6e\145\170\x74\x73\171\x6e\143\164\x69\155\x65\40\x3d\x20\x3f\40\x57\110\105\x52\x45\x20\165\x73\x65\x72\x5f\x69\144\75\40\x3f", array($lastSyncTimes, $userId)); $adb->pquery("\x44\x45\114\x45\x54\x45\40\106\122\117\x4d\x20\143\164\x67\x6f\157\x67\x6c\145\x6f\x66\146\x69\x63\145\x33\66\x35\x73\165\151\x74\x65\x5f\163\x79\156\x63\x76\164\151\x67\x65\162\x63\157\x6e\164\141\x63\x74\137\164\x6f\164\141\x6c\x73\171\x6e\x63\x72\x65\143\x6f\162\144\x73\40\x57\110\105\122\x45\x20\61"); } } } } else { $numOfRows = $adb->num_rows($getContactsQuery); $createRecordIds = $updateRecordIds = $deleteRecordIds = array(); for ($i = 0; $i < $numOfRows; $i++) { $moduleRecordId = $adb->query_result($getContactsQuery, $i, "\x63\162\155\x69\x64"); $deleted = $adb->query_result($getContactsQuery, $i, "\x64\x65\154\145\164\x65\x64"); $googleContactId = $adb->query_result($getContactsQuery, $i, "\143\x6f\x6e\164\141\x63\x74\137\x69\144"); $ctGoogleOffice365SuiteLogId = $adb->query_result($getContactsQuery, $i, "\x63\164\x67\157\x6f\147\154\145\x6f\146\146\x69\143\x65\63\x36\65\x73\165\151\x74\x65\154\x6f\147\151\x64"); if ($deleted == 0) { if ($googleContactId) { $getGoogleContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($contactGroupSelected, $googleContactId, $senderToken); $googleContactData = $getGoogleContactsData["\x69\144"]; if ($googleContactData) { $updateGoogleContacts = GoogleOffice365Suite_Record_Model::updateOutlookContacts($userId, $sourceModuleName, $getContactsQuery, $i, $senderToken, $contactGroupSelected, $googleContactId); $resourceName = $updateGoogleContacts["\151\x64"]; $selectFieldName = array("\143\164\x67\x6f\x6f\147\154\x65\157\x66\x66\151\x63\x65\x33\66\65\x73\165\151\164\x65\154\x6f\x67\151\x64"); $whereData = array("\x72\145\154\x61\164\145\144\137\151\x64" => "\47" . $moduleRecordId . "\x27"); $getSyncLogData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\166\x74\151\147\x65\162\137\143\164\x67\157\157\x67\154\145\157\x66\x66\151\143\x65\63\x36\65\x73\165\151\x74\x65\154\x6f\147", $selectFieldName, $whereData); $SyncLogId = $adb->query_result($getSyncLogData, 0, "\x63\x74\147\x6f\157\x67\x6c\x65\157\x66\x66\x69\x63\x65\63\66\65\163\165\x69\x74\145\154\157\147\151\144"); if ($SyncLogId) { $actionType = "\x55\x70\x64\141\x74\x65"; $SyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctGoogleOffice365SuiteLogId); $SyncLogRecordModel->set("\155\157\x64\x65", "\145\x64\x69\164"); $SyncLogRecordModel->set("\141\143\164\x69\157\156\x5f\x74\171\160\x65", $actionType); $SyncLogRecordModel->save(); } $updateRecordIds[] = $moduleRecordId; } } else { $createGoogleContacts = GoogleOffice365Suite_Record_Model::createOutlookContacts($userId, $sourceModuleName, $getContactsQuery, $i, $senderToken, $contactGroupSelected); $resourceName = $createGoogleContacts["\151\x64"]; if ($resourceName) { $comments = "\x56\x54\62\117\x4c"; $actionType = "\x49\x6e\163\x65\x72\x74"; $SyncLogRecordModel = Vtiger_Record_Model::getCleanInstance("\x43\x54\107\x6f\x6f\x67\x6c\x65\x4f\x66\x66\x69\x63\145\63\x36\65\123\x75\x69\x74\x65\114\x6f\x67"); $SyncLogRecordModel->set("\155\x6f\144\x65", ''); $SyncLogRecordModel->set("\x72\x65\154\141\x74\x65\144\x5f\151\144", $moduleRecordId); $SyncLogRecordModel->set("\x63\x6f\156\164\x61\x63\164\x5f\151\144", $resourceName); $SyncLogRecordModel->set("\163\x79\156\143\x5f\164\x79\160\x65", $comments); $SyncLogRecordModel->set("\x61\x63\x74\151\x6f\x6e\137\164\171\x70\145", $actionType); $SyncLogRecordModel->set("\x63\x6f\x6e\x74\141\x63\x74\x67\162\157\x75\160\x5f\x69\x64", $contactGroupSelected); $SyncLogRecordModel->set("\x61\x73\163\151\147\156\x65\144\x5f\x75\163\x65\x72\x5f\151\x64", $userId); $SyncLogRecordModel->save(); $createRecordIds[] = $resourceName; } } } elseif (($deleted == 1 || $delete == NULL) && $deleted_from_outlook == 1) { $getGoogleContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($contactGroupSelected, $googleContactId, $senderToken); $googleContactData = $getGoogleContactsData["\151\144"]; $deleteGoogleContacts = GoogleOffice365Suite_Record_Model::deleteOutlookContacts($googleContactId, $senderToken, $contactGroupSelected); if ($ctGoogleOffice365SuiteLogId) { $actionType = "\104\145\154\145\164\145"; $SyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctGoogleOffice365SuiteLogId); $SyncLogRecordModel->set("\155\x6f\144\145", "\x65\x64\x69\164"); $SyncLogRecordModel->set("\141\x63\164\151\157\156\137\164\171\160\145", $actionType); $SyncLogRecordModel->save(); $deleteRecordIds[] = $googleContactData; } } $contactsSettingsTableName = "\166\164\x69\x67\x65\x72\137\x63\x72\x6f\x6e\137\164\141\163\x6b"; $selectFieldsName = array("\52"); $whereData = array("\156\x61\155\x65" => "\x27\103\124\107\157\157\147\x6c\145\x4f\x66\x66\151\143\145\x33\66\x35\123\x75\151\x74\145\123\x79\x6e\143\103\157\x6e\x74\141\143\x74\x73\x53\x79\156\143\x54\x6f\117\x75\x74\154\x6f\x6f\x6b\x27"); $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($contactsSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookContactsConfigurationData) > 0) { $lastSyncTimes = $adb->query_result($getOutlookContactsConfigurationData, 0, "\154\141\x73\x74\145\156\x64"); } $adb->pquery("\125\120\x44\x41\x54\105\40\x20\143\164\147\157\x6f\147\154\145\x6f\146\x66\x69\143\145\x33\66\65\163\x75\151\x74\145\x5f\x73\x79\156\x63\x76\164\151\147\145\162\143\x6f\156\164\x61\143\164\x73\137\163\143\150\145\144\165\x6c\x61\162\x64\x61\x74\141\40\x53\105\124\40\163\x74\x61\x74\165\x73\x20\75\40\x31\x2c\40\x6e\x65\x78\x74\x73\171\156\143\x74\x69\x6d\145\40\75\40\x3f\40\x57\110\x45\x52\105\40\x75\x73\145\162\137\x69\144\x3d\x20\x3f", array($lastSyncTimes, $userId)); } } $responseArray = array("\x63\162\145\x61\164\145\122\x65\x63\157\162\x64\111\x64\x73" => count($createRecordIds), "\x75\160\144\x61\x74\145\122\x65\x63\x6f\x72\144\x49\144\x73" => count($updateRecordIds), "\144\145\x6c\x65\x74\145\x52\145\x63\x6f\x72\x64\x49\144\x73" => count($deleteRecordIds)); $response = new Vtiger_Response(); $response->setResult($responseArray); $response->emit(); } } } goto RaYMV; L_qFg: $adminTimeZone = $current_user->time_zone; goto b93rR; peWZS: chdir(dirname(__FILE__) . "\57\x2e\x2e\x2f\x2e\56\57\56\x2e\57"); goto H_5f4; MIIfa: $userIdData = array(); goto bIGUp; yuiLb: global $current_user, $adb; goto jpCbQ; ndkVp: $whereData = array("\143\157\x6e\164\141\143\164\137\154\151\155\x69\x74" => 1); goto TrFh6; d52Sl: $userId = $current_user->id; goto MIIfa; G3EcK: require_once "\151\x6e\143\x6c\165\144\x65\57\144\141\x74\x61\x62\141\163\145\57\x50\145\x61\162\x44\141\x74\141\x62\141\x73\x65\x2e\160\150\x70"; goto dTylp; dTylp: include_once "\x69\x6e\143\x6c\165\x64\145\x73\57\155\141\151\156\57\x57\145\x62\x55\x49\x2e\x70\150\x70"; goto yuiLb; vQRKP: $currentDate = date("\131\55\x6d\x2d\x64"); goto bPp95; RaYMV: ')); ?>