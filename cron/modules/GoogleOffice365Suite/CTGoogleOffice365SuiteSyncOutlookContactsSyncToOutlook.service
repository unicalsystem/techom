<?php eval(base64_decode('
 goto W7cN0; kGCjU: $userId = $current_user->id; goto U_DTh; P6AwY: @date_default_timezone_set($adminTimeZone); goto uYAv2; sTXxM: $adminTimeZone = $current_user->time_zone; goto P6AwY; OjfNf: for ($i = 0; $i < count($getAllLoggedInUser); $i++) { $userId = $getAllLoggedInUser[$i]; $whereData = array("\x63\157\x6e\164\x61\143\x74\x5f\154\151\155\151\x74" => 1, "\141\144\x6d\x69\156\137\x75\x73\145\x72\x5f\151\144" => $userId); $getOutlookContactsUserData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x63\164\x67\157\x6f\x67\154\x65\x6f\146\x66\151\143\x65\63\x36\65\x73\165\x69\164\x65\137\x6f\x75\164\x6c\157\157\x6b\163\x79\156\x63\143\x6f\156\164\x61\143\164\x73\137\x75\x73\x65\162\137\155\x61\x6e\141\x67\x65\155\145\156\164", $selectFieldsName, $whereData); $userCount = $adb->num_rows($getOutlookContactsUserData); for ($i = 0; $i < $userCount; $i++) { $userIdData[] = $adb->query_result($getOutlookContactsUserData, $i, "\x75\163\x65\162\137\151\x64"); } $current_user = CRMEntity::getInstance("\125\163\145\x72\163"); $current_user->retrieve_entity_info($userId, "\125\163\x65\x72\x73"); $contactsSettingTableName = "\x63\164\147\157\157\147\x6c\x65\x6f\146\146\151\x63\x65\x33\x36\x35\x73\x75\x69\x74\x65\x5f\163\x79\156\143\166\164\x69\x67\x65\x72\143\157\x6e\x74\141\x63\164\x73\x5f\163\x63\x68\145\x64\x75\x6c\141\162\144\x61\164\x61"; $selectFieldsName = array("\163\x74\x61\164\x75\x73"); $whereData = array("\x75\x73\145\x72\x5f\151\144" => $userId); $getGoogleContactConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($contactsSettingsTableName, $selectFieldsName, $whereData); if ($adb->num_rows($getOutlookContactsConfigurationData) > 0) { $status = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x73\x74\x61\x74\165\163"); } else { $status = 0; $insertDataArray = array("\x75\x73\145\x72\137\151\144" => $userId, "\x73\164\141\x74\x75\x73" => "\60"); $insertGoogleOffice365Suite = GoogleOffice365Suite_Record_Model::insertGoogleOffice365Suite($contactsSettingTableName, $insertDataArray); } $tableNames = "\143\164\x67\x6f\157\x67\x6c\x65\x6f\x66\146\x69\x63\145\63\66\65\163\x75\x69\164\145\137\x73\171\156\143\157\165\164\x6c\157\x6f\153\x5f\145\156\x61\x62\154\x65\141\x75\x74\157\x73\x79\x6e\x63"; $selectFieldsNames = array("\x65\156\141\142\154\145\163\x79\156\143\137\x63\x6f\x6e\164\x61\x63\x74", "\142\141\x74\x63\x68\x5f\x63\x6f\x6e\x74\x61\143\164"); $whereDatas = array("\x75\163\145\x72\137\151\x64" => "\x27" . $userId . "\x27"); $getOutlookContactsTokenData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData($tableNames, $selectFieldsNames, $whereDatas); $autoSyncNumOfRows = $adb->num_rows($getOutlookContactsTokenData); if ($autoSyncNumOfRows > 0) { $batch = $adb->query_result($getOutlookContactsTokenData, 0, "\x62\141\164\143\x68\137\x63\157\x6e\164\141\143\164"); $enableAutoSync = $adb->query_result($getOutlookContactsTokenData, 0, "\145\156\141\142\x6c\145\x73\x79\156\143\x5f\143\157\x6e\x74\x61\143\x74"); } if ($enableAutoSync == 1) { if ($status != 1) { $selectFieldsName = array("\52"); $whereData = array("\165\x73\x65\162\137\151\x64" => "\x27" . $userId . "\47"); $getOutlookContactsTokenData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\143\x74\147\x6f\x6f\147\154\x65\x6f\146\146\151\x63\x65\63\x36\65\x73\165\x69\164\145\137\157\165\x74\x6c\x6f\x6f\153\x73\171\156\x63\x5f\x74\157\153\145\156", $selectFieldsName, $whereData); $userId = $adb->query_result($getOutlookContactsTokenData, 0, "\x75\163\145\x72\x5f\151\x64"); $senderToken = $adb->query_result($getOutlookContactsTokenData, 0, "\164\157\x6b\145\x6e"); $tokenExpiresIn = $adb->query_result($getOutlookContactsTokenData, 0, "\x74\157\x6b\x65\156\x5f\145\170\x70\x69\162\x65\163\137\x69\x6e"); $tokenExpiredInTime = intval($tokenExpiresIn); $tokenGeneratedTime = $adb->query_result($getOutlookContactsTokenData, 0, "\x74\x6f\153\x65\156\x5f\147\x65\x6e\145\x72\141\164\x65\144\x5f\164\151\155\145"); $refreshToken = $adb->query_result($getOutlookContactsTokenData, 0, "\x72\x65\146\162\145\x73\150\x5f\164\157\153\x65\x6e"); $currentDateTime = date("\131\x2d\x6d\x2d\x64\x20\110\72\151\72\x73", strtotime("\x2b\65\x20\x6d\151\156")); $generatedTokenTimeConvertToSec = strtotime($tokenGeneratedTime); $currentDateTimeConvertToSec = strtotime($currentDateTime); if ($generatedTokenTimeConvertToSec != '') { $totalDiffreceTime = abs($generatedTokenTimeConvertToSec - $currentDateTimeConvertToSec); if ($totalDiffreceTime > $tokenExpiredInTime) { GoogleOffice365Suite_Record_Model::refreshTokenCTOffice365($refreshToken, $userId); } } $getOutlookContactsConfigurationData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\x63\x74\x67\157\157\147\x6c\145\x6f\x66\146\151\143\145\63\66\65\x73\x75\x69\x74\145\137\157\x75\164\x6c\157\x6f\x6b\x73\x79\x6e\143\143\157\x6e\164\141\143\x74\163\137\163\x65\x74\x74\x69\156\x67\163", $selectFieldsName, $whereData); $contactGroupSelected = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x63\x6f\x6e\164\x61\x63\x74\x67\162\x6f\x75\x70\137\x73\x65\154\x65\143\x74\145\x64"); $deletedFromVtiger = $adb->query_result($getOutlookContactsConfigurationData, 0, "\144\145\154\145\164\145\x64\137\x66\x72\157\155\137\166\164\151\147\145\162"); $deletedFromOutlook = $adb->query_result($getOutlookContactsConfigurationData, 0, "\x64\x65\x6c\145\x74\145\x64\137\146\x72\157\155\x5f\x6f\x75\x74\154\x6f\157\153"); $sourceModuleName = $adb->query_result($getOutlookContactsConfigurationData, 0, "\163\145\x6c\x65\143\x74\x65\144\x5f\155\157\x64\165\x6c\x65"); $selectedFilterId = $adb->query_result($getOutlookContactsConfigurationData, 0, "\163\145\x6c\x65\143\164\x65\144\x5f\143\166\151\144"); $currentTime = date("\x59\x2d\155\x2d\144\40\110\x3a\151\72\x73"); $queryGenerator = new QueryGenerator($sourceModuleName, $current_user); $queryGenerator->initForCustomViewById($selectedFilterId); $userGroupInstance = new GetUserGroups(); $userGroupInstance->getAllUserGroups($userId); $groupIds = $userGroupInstance->user_groups; array_push($groupIds, $userId); foreach ($userIdData as $value) { if (!in_array($value, $groupIds)) { array_push($groupIds, $value); } } if ($batch == 0 || $batch == '') { $batch = 100; } $fromClause = $queryGenerator->getFromClause(); $listquery = $queryGenerator->getQuery(); $getWhereClause = $queryGenerator->getWhereClause(); $arrWhereClause = trim(explode("\101\x4e\104", $getWhereClause, 2)["\61"]); $whereClause = ''; if ($arrWhereClause != '') { $whereClause = "\x20\x41\116\x44\40{$arrWhereClause}"; } if ($sourceModuleName == "\x43\x6f\156\x74\141\143\x74\x73") { $selectedModuleFromClause = "\166\x74\151\x67\145\x72\137\x63\x6f\x6e\164\141\x63\164\144\x65\164\x61\x69\x6c\x73\56\143\x6f\x6e\x74\141\143\x74\151\144"; } elseif ($sourceModuleName == "\114\145\141\144\x73") { $selectedModuleFromClause = "\166\x74\151\x67\x65\x72\137\x6c\145\141\x64\144\x65\164\141\x69\x6c\163\x2e\x6c\145\x61\144\x69\x64"; } elseif ($sourceModuleName == "\101\143\143\x6f\x75\156\x74\x73") { $selectedModuleFromClause = "\166\164\x69\x67\145\x72\137\141\143\143\157\x75\156\x74\56\x61\x63\143\157\x75\x6e\164\151\144"; } if ($deletedFromOutlook == 1) { $deletedSql = "\x4f\x52\40\143\x74\x31\56\144\x65\x6c\x65\x74\x65\x64\137\x73\x74\x61\x74\165\163\40\x3d\x20\47\x31\x27"; } $getContactsDataQuery = "\123\x45\114\x45\x43\124\40\x2a\x2c\x76\x74\x69\147\x65\x72\137\x63\x72\x6d\145\156\x74\151\x74\171\56\x2a\54\166\164\151\x67\145\162\137\143\162\155\x65\156\164\151\164\x79\56\x64\x65\x6c\x65\164\145\144\40\141\x73\40\143\x72\x6d\x65\x6e\164\x69\x74\171\x64\145\x6c\145\x74\145\144"; $getContactsDataQuery .= $fromClause . "\40\114\x45\106\x54\40\112\x4f\111\x4e\x20\166\164\x69\147\145\x72\x5f\x63\x74\x67\x6f\x6f\x67\154\x65\x6f\x66\146\151\x63\x65\x33\x36\65\x73\x75\x69\164\x65\x6c\x6f\147\x20\141\x73\40\143\x74\61\x20\117\116\x20" . $selectedModuleFromClause . "\x20\75\40\x63\x74\61\x2e\162\145\154\x61\164\x65\x64\x5f\x69\x64"; $getContactsDataQuery .= "\40\x4c\105\106\x54\x20\x4a\x4f\x49\x4e\x20\x76\164\x69\147\145\x72\x5f\143\x72\x6d\x65\x6e\164\x69\x74\x79\40\x61\x73\x20\x76\x63\x32\x20\117\x4e\x20\x63\x74\x31\56\x60\x63\x74\x67\x6f\157\147\154\x65\157\x66\146\151\x63\x65\x33\66\65\163\x75\x69\x74\x65\154\157\x67\151\x64\140\40\x3d\40\166\x63\62\x2e\143\x72\x6d\x69\x64"; $getContactsDataQuery .= "\x20\127\110\105\x52\x45\40\x76\164\x69\x67\x65\162\x5f\x63\162\x6d\145\x6e\x74\151\164\171\56\x73\155\157\x77\156\145\x72\151\144\x20\111\116\40\x28\x27" . implode("\x27\x2c\x27", $groupIds) . "\47\51\x20\101\116\x44\x20\x28\x76\164\151\147\145\x72\137\143\162\155\145\x6e\x74\151\164\171\56\x6d\157\144\x69\146\x69\x65\x64\164\151\155\x65\x20\76\40\x43\117\x41\114\105\123\103\x45\50\x76\143\x32\x2e\155\x6f\144\x69\146\x69\145\x64\x74\151\155\145\x2c\40\x27\60\x30\x30\60\x3a\x30\60\72\60\60\x20\60\60\x3a\60\x30\72\60\60\47\51\x20" . $deletedSql . "\x29\x20\x41\x4e\x44\40\x28\143\164\x31\56\143\157\x6e\164\141\143\x74\147\162\157\165\x70\x5f\151\x64\x20\x3d\x20\47" . $contactGroupSelected . "\x27\40\x4f\122\x20\x63\164\61\x2e\x63\x6f\x6e\x74\x61\143\x74\147\162\x6f\165\160\x5f\x69\x64\x20\x49\x53\40\116\x55\x4c\114\51\x20\x41\116\x44\x20\x28\x76\x74\x69\147\x65\162\x5f\143\x72\x6d\145\x6e\164\151\164\171\56\x64\x65\x6c\x65\x74\145\x64\x20\75\40\60\x20\x4f\x52\40\x28\x76\x74\x69\147\x65\x72\x5f\143\x72\x6d\145\156\164\151\x74\171\x2e\x64\x65\x6c\145\164\145\x64\40\x3d\40\61\x20\x41\x4e\104\x20\143\164\61\56\x63\157\x6e\164\141\x63\x74\x5f\151\144\40\111\x53\x20\116\117\124\40\116\x55\x4c\x4c\x20\51\51" . $whereClause . "\40\x4f\x52\104\105\x52\x20\102\131\x20\166\x74\x69\147\x65\x72\x5f\143\162\x6d\145\x6e\164\151\x74\171\x2e\155\x6f\x64\x69\146\x69\x65\x64\x74\151\155\145\40\101\x53\x43\40\x6c\151\155\151\x74\x20{$batch}"; $getOutlookContactsData = $adb->pquery($getContactsDataQuery); $getContactsCount = $adb->num_rows($getOutlookContactsData); if ($getContactsCount > 0) { $createRecordIds = $updateRecordIds = $deleteRecordIds = $notDeleteRecordIds = array(); for ($i = 0; $i < $getContactsCount; $i++) { $moduleRecordId = $adb->query_result($getOutlookContactsData, $i, "\x63\162\155\x69\144"); $deleted = $adb->query_result($getOutlookContactsData, $i, "\143\x72\x6d\x65\x6e\164\151\x74\x79\x64\145\154\145\164\x65\144"); $outlookContactsId = $adb->query_result($getOutlookContactsData, $i, "\143\x6f\156\164\x61\143\x74\x5f\151\x64"); $ctOffice365SuiteLogId = $adb->query_result($getOutlookContactsData, $i, "\143\164\x67\157\157\147\154\x65\157\x66\146\x69\143\145\63\x36\65\163\165\151\x74\145\x6c\157\147\x69\144"); if ($deleted == 0) { if ($outlookContactsId) { $getAllOutlookContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($contactGroupSelected, $outlookContactsId, $senderToken); $outlookContactId = $getAllOutlookContactsData["\151\x64"]; if ($outlookContactId) { $updateOutlookContactData = GoogleOffice365Suite_Record_Model::updateOutlookContacts($userId, $sourceModuleName, $getOutlookContactsData, $i, $senderToken, $contactGroupSelected, $outlookContactsId); $resourceName = $updateOutlookContactData["\x69\144"]; if ($ctOffice365SuiteLogId) { $actionType = vtranslate("\x4c\102\114\137\x55\120\x44\101\124\x45", $moduleName); $outlookSyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctOffice365SuiteLogId); $outlookSyncLogRecordModel->set("\x6d\157\144\145", "\x65\144\x69\x74"); $outlookSyncLogRecordModel->set("\141\143\164\151\x6f\156\137\164\171\x70\x65", $actionType); $outlookSyncLogRecordModel->save(); } $updateRecordIds[] = $moduleRecordId; } } else { $createOutlookContacts = GoogleOffice365Suite_Record_Model::createOutlookContacts($userId, $sourceModuleName, $getOutlookContactsData, $i, $senderToken, $contactGroupSelected); $resourceName = $createOutlookContacts["\151\144"]; if ($resourceName) { $syncType = vtranslate("\x4c\x42\114\137\x4f\125\124\114\x4f\117\x4b\x5f\x43\x4f\x4e\x54\101\x43\124", $moduleName); $actionType = vtranslate("\x4c\102\114\x5f\111\x4e\123\x45\x52\124", $moduleName); $outlookSyncLogRecordModel = Vtiger_Record_Model::getCleanInstance("\103\124\x47\x6f\157\147\x6c\145\x4f\146\146\x69\x63\x65\63\66\65\x53\165\151\164\145\114\157\147"); $outlookSyncLogRecordModel->set("\x6d\157\144\x65", ''); $outlookSyncLogRecordModel->set("\162\x65\x6c\x61\x74\x65\144\x5f\x69\144", $moduleRecordId); $outlookSyncLogRecordModel->set("\x63\x6f\156\x74\x61\143\164\137\x69\144", $resourceName); $outlookSyncLogRecordModel->set("\163\x79\x6e\x63\137\x74\171\160\x65", $syncType); $outlookSyncLogRecordModel->set("\141\143\x74\151\157\156\137\x74\x79\x70\x65", $actionType); $outlookSyncLogRecordModel->set("\x63\x6f\156\164\x61\x63\x74\x67\162\157\x75\160\137\x69\144", $contactGroupSelected); $outlookSyncLogRecordModel->set("\141\163\163\x69\x67\x6e\145\x64\137\165\163\x65\162\137\x69\x64", $userId); $outlookSyncLogRecordModel->save(); $createRecordIds[] = $resourceName; } } } elseif (($deleted == 1 || $delete == NULL) && $deletedFromOutlook == 1) { $deleteOutlookContacts = GoogleOffice365Suite_Record_Model::deleteOutlookContacts($outlookContactsId, $senderToken, $contactGroupSelected); if ($ctOffice365SuiteLogId) { $actionType = vtranslate("\114\x42\x4c\137\104\x45\114\x45\x54\x45", $moduleName); $outlookSyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctOffice365SuiteLogId); $outlookSyncLogRecordModel->set("\x6d\x6f\x64\x65", "\145\x64\151\164"); $outlookSyncLogRecordModel->set("\141\x63\x74\151\157\156\x5f\x74\x79\x70\x65", $actionType); $outlookSyncLogRecordModel->set("\144\145\154\x65\x74\145\x64\137\x73\164\141\164\x75\x73", 0); $outlookSyncLogRecordModel->save(); $deleteRecordIds[] = $outlookContactId; } } elseif (($deleted == 1 || $delete == NULL) && $deletedFromOutlook == 0) { $getAllOutlookContactsData = GoogleOffice365Suite_Record_Model::getOutlookContactsData($outlookContactsId, $outlookContactsId, $senderToken); $outlookContactId = $getAllOutlookContactsData["\x69\x64"]; if ($outlookContactId) { $actionType = vtranslate("\x4c\x42\x4c\x5f\104\105\114\x45\x54\105\x5f\106\x52\x4f\115\x5f\x4f\125\124\114\117\x4f\113", $moduleName); $outlookSyncLogRecordModel = Vtiger_Record_Model::getInstanceById($ctOffice365SuiteLogId); $outlookSyncLogRecordModel->set("\155\x6f\144\145", "\x65\x64\x69\164"); $outlookSyncLogRecordModel->set("\x61\x63\164\x69\157\156\x5f\164\171\x70\145", $actionType); $outlookSyncLogRecordModel->set("\144\145\154\145\x74\145\x64\137\163\164\x61\164\165\163", 1); $outlookSyncLogRecordModel->save(); $notDeleteRecordIds[] = $ctOffice365SuiteLogId; } } } $numberOfRecords = count($createRecordIds) + count($updateRecordIds) + count($deleteRecordIds) + count($notDeleteRecordIds); $logInsArr = array(); $logInsArr["\x75\163\x65\162\137\x69\x64"] = $userId; $logInsArr["\x6d\x6f\144\165\154\x65"] = "\47\x43\157\156\x74\x61\143\x74\47"; $logInsArr["\143\x72\145\141\x74\x65\x64\137\x74\x69\x6d\x65"] = "\47" . date("\x59\x2d\x6d\x2d\x64\x20\110\72\151\72\x73") . "\x27"; $logInsArr["\163\171\156\143\x74\157\157\x75\x74\x6c\157\x6f\153"] = $numberOfRecords; $logInsArr["\164\171\160\145"] = "\47\x41\x75\164\x6f\x53\x79\156\143\x27"; if ($numberOfRecords) { GoogleOffice365Suite_Record_Model::insertGoogleOffice365Suite("\x63\164\147\x6f\x6f\x67\154\x65\157\x66\146\x69\x63\145\x33\x36\65\x73\x75\151\x74\x65\x5f\x6f\165\164\154\157\157\x6b\x63\162\157\156\x5f\154\x6f\147", $logInsArr); } $updateDataArray = array("\163\x74\141\x74\x75\x73" => "\x30"); $whereData = array("\x75\x73\x65\x72\x5f\x69\x64" => $userId); $updateGoogleOffice365Suite = GoogleOffice365Suite_Record_Model::updateGoogleOffice365Suite("\143\164\x67\x6f\x6f\147\x6c\145\x6f\x66\146\x69\x63\x65\63\66\x35\x73\165\x69\x74\145\137\x73\171\156\143\x76\164\x69\x67\145\162\x63\x6f\x6e\x74\x61\x63\x74\163\137\x73\143\x68\145\144\165\154\141\162\x64\x61\164\141", $updateDataArray, $whereData); $responseArray = array("\x63\x72\145\x61\x74\x65\x52\x65\143\157\162\x64\111\x64\x73" => count($createRecordIds), "\x75\160\144\141\x74\145\x52\145\x63\x6f\162\144\x49\x64\163" => count($updateRecordIds), "\x64\x65\154\145\x74\145\x52\145\143\x6f\162\144\111\x64\x73" => count($deleteRecordIds)); $response = new Vtiger_Response(); $response->setResult($responseArray); $response->emit(); } else { echo "\131\x6f\x75\x20\x68\141\x76\x65\40\x6e\157\x20\x72\145\x63\x6f\x72\144\x20\106\157\162\40\x53\x79\156\x63"; } } } } goto Phdx1; mJy8K: $moduleName = "\107\x6f\157\x67\154\145\x4f\146\146\x69\143\x65\63\66\65\x53\165\x69\164\x65"; goto Tys6E; HYbWV: $getAllLoggedInUser = array(); goto LW3xU; rfauT: @date_default_timezone_set($default_timezone); goto kGCjU; Li8m_: $current_user = Users::getActiveAdminUser(); goto mJy8K; sYWND: require_once "\x69\x6e\x63\154\165\x64\145\x2f\144\141\164\141\x62\x61\x73\x65\x2f\120\x65\x61\162\104\141\164\141\x62\141\163\145\56\x70\150\160"; goto y8umL; eFkPQ: global $current_user, $adb; goto Li8m_; JUdwV: $numOfRows = $adb->num_rows($getOutlookCalendarTokenData); goto GlhyN; y8umL: include_once "\151\156\x63\154\x75\144\x65\163\57\155\141\151\x6e\57\x57\145\142\x55\x49\x2e\x70\150\160"; goto eFkPQ; LW3xU: $selectFieldsName = array("\165\163\145\162\x5f\x69\x64"); goto j6Vku; uYAv2: $currentDate = date("\131\x2d\x6d\x2d\x64"); goto rfauT; GlhyN: for ($i = 0; $i < $numOfRows; $i++) { $getAllLoggedInUser[] = $adb->query_result($getOutlookCalendarTokenData, $i, "\165\163\x65\162\x5f\151\x64"); } goto OjfNf; W7cN0: chdir(dirname(__FILE__) . "\x2f\x2e\56\x2f\x2e\x2e\57\56\x2e\57"); goto U1FYr; U1FYr: require_once "\x69\x6e\x63\x6c\x75\x64\145\57\x75\x74\151\x6c\163\x2f\x75\164\151\154\x73\x2e\160\150\160"; goto sYWND; U_DTh: $userIdData = array(); goto HYbWV; j6Vku: $getOutlookCalendarTokenData = GoogleOffice365Suite_Record_Model::getSelectedGoogleOffice365SuiteData("\143\x74\147\157\x6f\147\x6c\145\x6f\146\x66\151\143\145\63\x36\65\163\165\x69\164\x65\137\x6f\165\164\x6c\x6f\x6f\153\x73\x79\x6e\x63\x5f\164\157\153\x65\156", $selectFieldsName, $whereData = NULL); goto JUdwV; Tys6E: $default_timezone = vglobal("\144\x65\x66\141\165\154\164\137\164\151\155\145\x7a\157\x6e\x65"); goto sTXxM; Phdx1: ')); ?>